%%
clc;clear all;

%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: D:\data\jlambert\Experiment\TMS_TFUS_Map\YB_TFUS_MAP_S1\TMS_S1.xlsx
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2017/12/21 15:06:19

% Import the data
[~, ~, raw] = xlsread('D:\data\jlambert\Experiment\TMS_TFUS_Map\YB_TFUS_MAP_S1\TFUS_YB_S1.xlsx','Sheet1','A2:L401');
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
cellVectors = raw(:,[1,7,8,9,10]);
raw = raw(:,[2,3,4,5,6,11,12]);
% Create output variable
data = reshape([raw{:}],size(raw));
% Create table
TFUS = table;
% Allocate imported array to column variable names
TFUS.TMSresponse = cellVectors(:,1);
TFUS.PeaktopeakV = data(:,1);
TFUS.Latencypeak1 = data(:,2);
TFUS.Latencypeak2 = data(:,3);
TFUS.Peaktopeakduration = data(:,4);
TFUS.Stimintensity = data(:,5);
TFUS.TMSCoil = cellVectors(:,2);
TFUS.Coilposition = cellVectors(:,3);
TFUS.Coilorientationqxqyqzqw = cellVectors(:,4);
TFUS.EMGchannel = cellVectors(:,5);
TFUS.StimulusId = data(:,6);
TFUS.TMSstimulustime = data(:,7);
% Clear temporary variables
clearvars data raw cellVectors;

% Parsing the CoilPosition column into 3 distinct field
for i=1:size(TFUS.Coilposition,1)
    IndComma=find(TFUS.Coilposition{i,:}==',');
    A=cell2mat(TFUS.Coilposition(i,1));
    TFUS.CoilPositionX(i) = str2num(A(1:IndComma(1)-1));
    TFUS.CoilPositionY(i) = str2num(A(IndComma(1)+1:IndComma(2)-1));
    TFUS.CoilPositionZ(i) = str2num(A(IndComma(2)+1:end));
end
%
for j=1:size(TFUS.EMGchannel,1)
   if (TFUS.EMGchannel{j,:}=='EMG1') 
   TFUS_IndEMG1(j)=j;
   else
   TFUS_IndEMG2(j)=j; 
   end
end
TFUS_IndEMG1_ok = TFUS_IndEMG1(TFUS_IndEMG1~=0);
TFUS_IndEMG2_ok = TFUS_IndEMG2(TFUS_IndEMG2~=0);

% New table containing only EMG channel 1 data
TFUSEMG1 = table;
TFUSEMG1.TMSresponse = TFUS.TMSresponse(TFUS_IndEMG1_ok);
TFUSEMG1.PeaktopeakV = TFUS.PeaktopeakV(TFUS_IndEMG1_ok);
TFUSEMG1.Latencypeak1 = TFUS.Latencypeak1(TFUS_IndEMG1_ok);
TFUSEMG1.Latencypeak2 = TFUS.Latencypeak2(TFUS_IndEMG1_ok);
TFUSEMG1.Peaktopeakduration = TFUS.Peaktopeakduration(TFUS_IndEMG1_ok);
TFUSEMG1.Stimintensity = TFUS.Stimintensity(TFUS_IndEMG1_ok);
TFUSEMG1.TMSCoil = TFUS.TMSCoil(TFUS_IndEMG1_ok);
TFUSEMG1.Coilposition = TFUS.Coilposition(TFUS_IndEMG1_ok) ;
TFUSEMG1.Coilorientationqxqyqzqw = TFUS.Coilorientationqxqyqzqw(TFUS_IndEMG1_ok);
TFUSEMG1.EMGchannel = TFUS.EMGchannel(TFUS_IndEMG1_ok);
TFUSEMG1.StimulusId = TFUS.StimulusId(TFUS_IndEMG1_ok);
TFUSEMG1.TMSstimulustime = TFUS.TMSstimulustime(TFUS_IndEMG1_ok);
TFUSEMG1.CoilPositionX = TFUS.CoilPositionX(TFUS_IndEMG1_ok);
TFUSEMG1.CoilPositionY = TFUS.CoilPositionY(TFUS_IndEMG1_ok);
TFUSEMG1.CoilPositionZ = TFUS.CoilPositionZ(TFUS_IndEMG1_ok);
% New table containing only EMG channel 2 data
TFUSEMG2 = table;
TFUSEMG2.TMSresponse = TFUS.TMSresponse(TFUS_IndEMG2_ok);
TFUSEMG2.PeaktopeakV = TFUS.PeaktopeakV(TFUS_IndEMG2_ok);
TFUSEMG2.Latencypeak1 = TFUS.Latencypeak1(TFUS_IndEMG2_ok);
TFUSEMG2.Latencypeak2 = TFUS.Latencypeak2(TFUS_IndEMG2_ok);
TFUSEMG2.Peaktopeakduration = TFUS.Peaktopeakduration(TFUS_IndEMG2_ok);
TFUSEMG2.Stimintensity = TFUS.Stimintensity(TFUS_IndEMG2_ok);
TFUSEMG2.TMSCoil = TFUS.TMSCoil(TFUS_IndEMG2_ok);
TFUSEMG2.Coilposition = TFUS.Coilposition(TFUS_IndEMG2_ok) ;
TFUSEMG2.Coilorientationqxqyqzqw = TFUS.Coilorientationqxqyqzqw(TFUS_IndEMG2_ok);
TFUSEMG2.EMGchannel = TFUS.EMGchannel(TFUS_IndEMG2_ok);
TFUSEMG2.StimulusId = TFUS.StimulusId(TFUS_IndEMG2_ok);
TFUSEMG2.TMSstimulustime = TFUS.TMSstimulustime(TFUS_IndEMG2_ok);
TFUSEMG2.CoilPositionX = TFUS.CoilPositionX(TFUS_IndEMG2_ok);
TFUSEMG2.CoilPositionY = TFUS.CoilPositionY(TFUS_IndEMG2_ok);
TFUSEMG2.CoilPositionZ = TFUS.CoilPositionZ(TFUS_IndEMG2_ok);
%% Params
NumberTrials = 200;
SubjName = 'YB';
SessionNum = 1;
%% Analysis of EMG waveforms
load('bl ep-select ep but 20171221_1010-emg1_TMS_Session1.mat');
time=linspace(-0.05,0.5,512);

for i = 1:NumberTrials
    EMG_TimeRange = find(time>=0.015&time<=0.05);
    TFUSEMG1.PtPVal(i) = double(abs(max(data(i+200,1,:,:,:,EMG_TimeRange)))+abs(min(data(i+200,1,:,:,:,EMG_TimeRange))));
end
figure()
plot(time,squeeze(data(1,1,:,:,:,:)))

%%
TFUS_PtPValuesEMG1 = unique(sort(TFUSEMG1.PtPVal));
TFUS_R1 = linspace(0,1,length(TFUSEMG1.PtPVal))';
TFUS_G1 = linspace(0,0,length(TFUSEMG1.PtPVal))';
TFUS_B1 = linspace(1,0,length(TFUSEMG1.PtPVal))';
% Define Arbitrary Function for Plotting
TFUS_HomeColor1 = [TFUS_R1 TFUS_G1 TFUS_B1];

TFUS_PtPValuesEMG2 = unique(sort(TFUS.PeaktopeakV(TFUS_IndEMG2_ok)));
TFUS_R2 = linspace(0,1,length(TFUS_PtPValuesEMG2))';
TFUS_G2 = linspace(0,0,length(TFUS_PtPValuesEMG2))';
TFUS_B2 = linspace(1,0,length(TFUS_PtPValuesEMG2))';
% Define Arbitrary Function for Plotting
TFUS_HomeColor2 = [TFUS_R2 TFUS_G2 TFUS_B2];


%%
[X_Interpol,Y_Interpol]=meshgrid(linspace(min(TFUSEMG1.CoilPositionX),max(TFUSEMG1.CoilPositionX),100),linspace(min(TFUSEMG1.CoilPositionY),max(TFUSEMG1.CoilPositionY),100));%MA: meshgrid 2D
Z_TFUSEMG1=griddata(TFUSEMG1.CoilPositionX,TFUSEMG1.CoilPositionY,TFUSEMG1.PtPVal,X_Interpol,Y_Interpol,'v4');%MA: interpolate scattered data
figure;
%surf(X,Y,Z,'EdgeColor','none','LineStyle','none');%MA: 3D
imagesc(-linspace(min(TFUSEMG1.CoilPositionX),max(TFUSEMG1.CoilPositionX),100),linspace(min(TFUSEMG1.CoilPositionY),max(TFUSEMG1.CoilPositionY),100),Z_TFUSEMG1);%MA: 3D
hold on;
for k = 1:size(TFUSEMG1.PtPVal,1)
    % Arbitrary function which relies on the random variable
    % Plot line with color selected by random number
    plot3(-TFUSEMG1.CoilPositionX(k),TFUSEMG1.CoilPositionY(k),TFUSEMG1.PtPVal(k)+10,'o','Color',TFUS_HomeColor1(find(TFUSEMG1.PtPVal(k)==TFUS_PtPValuesEMG1),:),'MarkerFaceColor',TFUS_HomeColor1(find(TFUSEMG1.PtPVal(k)==TFUS_PtPValuesEMG1),:),'MarkerSize',10)
%     plot(TMSS1.CoilPositionX(IndEMG1_ok(k)),TMSS1.CoilPositionY(IndEMG1_ok(k)),'o')
    text(-TFUSEMG1.CoilPositionX(k)+0.5,TFUSEMG1.CoilPositionY(k)+0.5,num2str(k))
end
hold off;
title('Map TFUS EMG Channel 1')
% [X_TFUSEMG1,Y_TFUSEMG1]=meshgrid(linspace(min(TFUSEMG1.CoilPositionX),max(TFUSEMG1.CoilPositionX),100),linspace(min(TFUSEMG1.CoilPositionY),max(TFUSEMG1.CoilPositionY),100));%MA: meshgrid 2D
% Z_TFUSEMG1=griddata(TFUSEMG1.CoilPositionX,TFUSEMG1.CoilPositionY,TFUSEMG1.PeaktopeakV,X_TFUSEMG1,Y_TFUSEMG1,'v4');%MA: interpolate scattered data
% figure;
% %surf(X,Y,Z,'EdgeColor','none','LineStyle','none');%MA: 3D
% imagesc(-linspace(min(TFUSEMG1.CoilPositionX),max(TFUSEMG1.CoilPositionX),100),linspace(min(TFUSEMG1.CoilPositionY),max(TFUSEMG1.CoilPositionY),100),Z_TFUSEMG1);%MA: 3D
% hold on;
% for k = 1:size(TFUSEMG1.PeaktopeakV,1)
%     % Arbitrary function which relies on the random variable
%     % Plot line with color selected by random number
%     plot3(-TFUSEMG1.CoilPositionX(k),TFUSEMG1.CoilPositionY(k),TFUSEMG1.PeaktopeakV(k)+10,'o','Color',TFUS_HomeColor1(find(TFUSEMG1.PeaktopeakV(k)==TFUS_PtPValuesEMG1),:),'MarkerFaceColor',TFUS_HomeColor1(find(TFUSEMG1.PeaktopeakV(k)==TFUS_PtPValuesEMG1),:),'MarkerSize',10)
% %     plot(TMSS1.CoilPositionX(IndEMG1_ok(k)),TMSS1.CoilPositionY(IndEMG1_ok(k)),'o')
%     text(-TFUSEMG1.CoilPositionX(k),TFUSEMG1.CoilPositionY(k),num2str(k))
% end
% hold off;
% title('Map TFUS EMG Channel 1')
  
[X_TFUSEMG2,Y_TFUSEMG2]=meshgrid(linspace(min(TFUSEMG2.CoilPositionX),max(TFUSEMG2.CoilPositionX),100),linspace(min(TFUSEMG2.CoilPositionY),max(TFUSEMG2.CoilPositionY),100));%MA: meshgrid 2D
Z_TFUSEMG2=griddata(TFUSEMG2.CoilPositionX,TFUSEMG2.CoilPositionY,TFUSEMG2.PeaktopeakV,X_TFUSEMG2,Y_TFUSEMG2,'v4');%MA: interpolate scattered data
figure;
%surf(X,Y,Z,'EdgeColor','none','LineStyle','none');%MA: 3D
imagesc(-linspace(min(TFUSEMG2.CoilPositionX),max(TFUSEMG2.CoilPositionX),100),linspace(min(TFUSEMG2.CoilPositionY),max(TFUSEMG2.CoilPositionY),100),Z_TFUSEMG2);%MA: 3D
hold on;
for l = 1:size(TFUSEMG2.PeaktopeakV,1)
    % Arbitrary function which relies on the random variable
    % Plot line with color selected by random number
    plot3(-TFUSEMG2.CoilPositionX(l),TFUSEMG2.CoilPositionY(l),TFUSEMG2.PeaktopeakV(l)+10,'o','Color',TFUS_HomeColor1(find(TFUSEMG2.PeaktopeakV(l)==TFUS_PtPValuesEMG2),:),'MarkerFaceColor',TFUS_HomeColor1(find(TFUSEMG2.PeaktopeakV(l)==TFUS_PtPValuesEMG2),:),'MarkerSize',10)
%     plot(TMSS1.CoilPositionX(IndEMG1_ok(k)),TMSS1.CoilPositionY(IndEMG1_ok(k)),'o')
    text(-TFUSEMG2.CoilPositionX(l),TFUSEMG2.CoilPositionY(l),num2str(l))
end
hold off;
title('Map TFUS EMG Channel 2')

%% Mapping of the sensation reported
Tfusexpe = load('DonneesTMSmapping_YB_session 1_TFUS.mat', 'TMS');
Tfusexpe = struct2table(Tfusexpe.TMS);
TFUSExpe = table;
TFUSExpe.ISI = Tfusexpe.ISI';
TFUSExpe.SubjectReport = Tfusexpe.SubjectReport';
for w = 1 : length(TFUSExpe.SubjectReport)
    if strcmp(TFUSExpe.SubjectReport(w),'')
        TFUSExpe.Sensation(w)=0;
    else
        TFUSExpe.Sensation(w)=1;
    end
end

Z_TFUSsensation=griddata(TFUSEMG1.CoilPositionX,TFUSEMG1.CoilPositionY,TFUSExpe.Sensation',X_Interpol,Y_Interpol,'cubic');%MA: interpolate scattered data
figure;
%surf(X,Y,Z,'EdgeColor','none','LineStyle','none');%MA: 3D
imagesc(-linspace(min(TFUSEMG1.CoilPositionX),max(TFUSEMG1.CoilPositionX),100),linspace(min(TFUSEMG1.CoilPositionY),max(TFUSEMG1.CoilPositionY),100),Z_TFUSsensation);%MA: 3D
hold on;
for k = 1:size(TFUSEMG1.PeaktopeakV,1)
    % Arbitrary function which relies on the random variable
    % Plot line with color selected by random number
    plot3(-TFUSEMG1.CoilPositionX(k),TFUSEMG1.CoilPositionY(k),TFUSEMG1.PeaktopeakV(k)+10,'o','Color',TFUS_HomeColor1(find(TFUSEMG1.PtPVal(k)==TFUS_PtPValuesEMG1),:),'MarkerFaceColor',TFUS_HomeColor1(find(TFUSEMG1.PtPVal(k)==TFUS_PtPValuesEMG1),:),'MarkerSize',10)
%     plot(TMSS1.CoilPositionX(IndEMG1_ok(k)),TMSS1.CoilPositionY(IndEMG1_ok(k)),'o')
    text(-TFUSEMG1.CoilPositionX(k)+0.5,TFUSEMG1.CoilPositionY(k)+0.5,num2str(k))
end
hold off;
title('Map TFUS EMG Channel 1 - Sensations')
%% Removing artifact / misplacement
TFUSEMG1R=TFUSEMG1;
TFUSExpeR=TFUSExpe;
% TrialToReject = 35;
% TFUSEMG1R(TrialToReject,:)=[];
% TFUSExpeR(TrialToReject,:)=[];

% Interpolation of the EMG amplitude according to a mesh interpolated based on the coordinates of stimulation
[X_InterpolR,Y_InterpolR]=meshgrid(linspace(min(TFUSEMG1R.CoilPositionX),max(TFUSEMG1R.CoilPositionX),100),linspace(min(TFUSEMG1R.CoilPositionY),max(TFUSEMG1R.CoilPositionY),100));%MA: meshgrid 2D
Z_TFUSEMG1R=griddata(TFUSEMG1R.CoilPositionX,TFUSEMG1R.CoilPositionY,TFUSEMG1R.PtPVal,X_InterpolR,Y_InterpolR,'v4');%MA: interpolate scattered data
figure;
%surf(X,Y,Z,'EdgeColor','none','LineStyle','none');%MA: 3D
imagesc(-linspace(min(TFUSEMG1R.CoilPositionX),max(TFUSEMG1R.CoilPositionX),100),linspace(min(TFUSEMG1R.CoilPositionY),max(TFUSEMG1R.CoilPositionY),100),Z_TFUSEMG1R);%MA: 3D
hold on;
for k = 1:size(TFUSEMG1R.PeaktopeakV,1)
    % Arbitrary function which relies on the random variable
    % Plot line with color selected by random number
    plot3(-TFUSEMG1R.CoilPositionX(k),TFUSEMG1R.CoilPositionY(k),TFUSEMG1R.PtPVal(k)+10,'o','Color',TFUS_HomeColor1(find(TFUSEMG1R.PtPVal(k)==TFUS_PtPValuesEMG1),:),'MarkerFaceColor',TFUS_HomeColor1(find(TFUSEMG1R.PtPVal(k)==TFUS_PtPValuesEMG1),:),'MarkerSize',10)
%     plot(TMSS1.CoilPositionX(IndEMG1_ok(k)),TMSS1.CoilPositionY(IndEMG1_ok(k)),'o')
    text(-TFUSEMG1R.CoilPositionX(k)+0.5,TFUSEMG1R.CoilPositionY(k)+0.5,num2str(k))
end
hold off;
title('Map TFUS EMG Channel 1 - Artifact and misplacement removed')

Z_TFUSsensationR=griddata(TFUSEMG1R.CoilPositionX,TFUSEMG1R.CoilPositionY,TFUSExpeR.Sensation,X_Interpol,Y_Interpol,'cubic');%MA: interpolate scattered data
figure;
%surf(X,Y,Z,'EdgeColor','none','LineStyle','none');%MA: 3D
imagesc(-linspace(min(TFUSEMG1R.CoilPositionX),max(TFUSEMG1R.CoilPositionX),100),linspace(min(TFUSEMG1R.CoilPositionY),max(TFUSEMG1R.CoilPositionY),100),Z_TFUSsensationR);%MA: 3D
hold on;
for k = 1:size(TFUSEMG1R.PeaktopeakV,1)
    % Arbitrary function which relies on the random variable
    % Plot line with color selected by random number
    plot3(-TFUSEMG1R.CoilPositionX(k),TFUSEMG1R.CoilPositionY(k),TFUSEMG1R.PtPVal(k)+10,'o','Color',TFUS_HomeColor1(find(TFUSEMG1R.PtPVal(k)==TFUS_PtPValuesEMG1),:),'MarkerFaceColor',TFUS_HomeColor1(find(TFUSEMG1R.PtPVal(k)==TFUS_PtPValuesEMG1),:),'MarkerSize',10)
%     plot(TMSS1.CoilPositionX(IndEMG1_ok(k)),TMSS1.CoilPositionY(IndEMG1_ok(k)),'o')
    text(-TFUSEMG1R.CoilPositionX(k)+0.5,TFUSEMG1R.CoilPositionY(k)+0.5,num2str(k))
end
hold off;
title('Map TFUS Sensations - Artifact / misplacement removed')


NamefileTMS = ['Results_TMS_Mapping_' SubjName '_Session' num2str(SessionNum)];
save(NamefileTMS)
%%
% figure()
% hold on;
% for m = 1:size(TFUS.PeaktopeakV(TFUS_IndEMG1_ok),1)
%     % Arbitrary function which relies on the random variable
%     % Plot line with color selected by random number
%     plot(TFUS.CoilPositionX(TFUS_IndEMG1_ok(m)),TFUS.CoilPositionY(TFUS_IndEMG1_ok(m)),'o','Color',TFUS_HomeColor1(find(TFUS.PeaktopeakV(TFUS_IndEMG1_ok(m))==TFUS_PtPValuesEMG1),:),'MarkerFaceColor',TFUS_HomeColor1(find(TFUS.PeaktopeakV(TFUS_IndEMG1_ok(m))==TFUS_PtPValuesEMG1),:))
% %     plot(TMSS1.CoilPositionX(IndEMG1_ok(k)),TMSS1.CoilPositionY(IndEMG1_ok(k)),'o')
% 
% %     text(TFUS.CoilPositionX(TFUS_IndEMG1_ok(m)),TFUS.CoilPositionY(TFUS_IndEMG1_ok(m)),num2str(m))
% end
% 	hold off;
% 	title('Map TFUS EMG Channel 1')
%   
% figure()
%     hold on;
% for n = 1:size(TFUS.PeaktopeakV(TFUS_IndEMG2_ok),1)
%     % Arbitrary function which relies on the random variable
%     % Plot line with color selected by random number
%     plot(TFUS.CoilPositionX(TFUS_IndEMG2_ok(n)),TFUS.CoilPositionY(TFUS_IndEMG2_ok(n)),'o','Color',TFUS_HomeColor2(find(TFUS.PeaktopeakV(TFUS_IndEMG2_ok(n))==TFUS_PtPValuesEMG2),:),'MarkerFaceColor',TFUS_HomeColor2(find(TFUS.PeaktopeakV(TFUS_IndEMG2_ok(n))==TFUS_PtPValuesEMG2),:))
% %     plot(TMSS1.CoilPositionX(IndEMG1_ok(k)),TMSS1.CoilPositionY(IndEMG1_ok(k)),'o')
% %     text(TFUS.CoilPositionX(TFUS_IndEMG2_ok(n)),TMS.CoilPositionY(TFUS_IndEMG2_ok(n)),num2str(n))
% end
% 	hold off;
%     title('Map TFUS EMG Channel 2')
% NamefileTFUS = ['Results_TFUS_Mapping_' SubjName '_Session' num2str(SessionNum)];
% save(NamefileTFUS)
