clc; clear all;
%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: D:\data\jlambert\Experiment\TMS_TFUS_Map\YB_TFUS_MAP_S1\TMS_S1.xlsx
%    Worksheet: Sheet1
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2017/12/21 15:06:19

% Import the data
[~, ~, raw] = xlsread('D:\data\jlambert\Experiment\TMS_TFUS_Map\YB_TFUS_MAP_S1\TMS_YB_S1.xlsx','Sheet1','A2:L401');
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
cellVectors = raw(:,[1,7,8,9,10]);
raw = raw(:,[2,3,4,5,6,11,12]);
% Create output variable
data = reshape([raw{:}],size(raw));
% Create table
TMS = table;
% Allocate imported array to column variable names
TMS.TMSresponse = cellVectors(:,1);
TMS.PeaktopeakV = data(:,1);
TMS.Latencypeak1 = data(:,2);
TMS.Latencypeak2 = data(:,3);
TMS.Peaktopeakduration = data(:,4);
TMS.Stimintensity = data(:,5);
TMS.TMSCoil = cellVectors(:,2);
TMS.Coilposition = cellVectors(:,3);
TMS.Coilorientationqxqyqzqw = cellVectors(:,4);
TMS.EMGchannel = cellVectors(:,5);
TMS.StimulusId = data(:,6);
TMS.TMSstimulustime = data(:,7);
% Clear temporary variables
clearvars data raw cellVectors;

% Parsing the CoilPosition column into 3 distinct field
for i=1:size(TMS.Coilposition,1)
    IndComma=find(TMS.Coilposition{i,:}==',');
    A=cell2mat(TMS.Coilposition(i,1));
    TMS.CoilPositionX(i) = str2num(A(1:IndComma(1)-1));
    TMS.CoilPositionY(i) = str2num(A(IndComma(1)+1:IndComma(2)-1));
    TMS.CoilPositionZ(i) = str2num(A(IndComma(2)+1:end));
end
%
for j=1:size(TMS.EMGchannel,1)
   if (TMS.EMGchannel{j,:}=='EMG1') 
   TMS_IndEMG1(j)=j;
   else
   IndEMG2(j)=j; 
   end
end
TMS_IndEMG1_ok = TMS_IndEMG1(TMS_IndEMG1~=0);
TMS_IndEMG2_ok = IndEMG2(IndEMG2~=0);

% New table containing only EMG channel 1 data
TMSEMG1 = table;
TMSEMG1.TMSresponse = TMS.TMSresponse(TMS_IndEMG1_ok);
TMSEMG1.PeaktopeakV = TMS.PeaktopeakV(TMS_IndEMG1_ok);
TMSEMG1.Latencypeak1 = TMS.Latencypeak1(TMS_IndEMG1_ok);
TMSEMG1.Latencypeak2 = TMS.Latencypeak2(TMS_IndEMG1_ok);
TMSEMG1.Peaktopeakduration = TMS.Peaktopeakduration(TMS_IndEMG1_ok);
TMSEMG1.Stimintensity = TMS.Stimintensity(TMS_IndEMG1_ok);
TMSEMG1.TMSCoil = TMS.TMSCoil(TMS_IndEMG1_ok);
TMSEMG1.Coilposition = TMS.Coilposition(TMS_IndEMG1_ok) ;
TMSEMG1.Coilorientationqxqyqzqw = TMS.Coilorientationqxqyqzqw(TMS_IndEMG1_ok);
TMSEMG1.EMGchannel = TMS.EMGchannel(TMS_IndEMG1_ok);
TMSEMG1.StimulusId = TMS.StimulusId(TMS_IndEMG1_ok);
TMSEMG1.TMSstimulustime = TMS.TMSstimulustime(TMS_IndEMG1_ok);
TMSEMG1.CoilPositionX = TMS.CoilPositionX(TMS_IndEMG1_ok);
TMSEMG1.CoilPositionY = TMS.CoilPositionY(TMS_IndEMG1_ok);
TMSEMG1.CoilPositionZ = TMS.CoilPositionZ(TMS_IndEMG1_ok);
% New table containing only EMG channel 2 data
TMSEMG2 = table;
TMSEMG2.TMSresponse = TMS.TMSresponse(TMS_IndEMG2_ok);
TMSEMG2.PeaktopeakV = TMS.PeaktopeakV(TMS_IndEMG2_ok);
TMSEMG2.Latencypeak1 = TMS.Latencypeak1(TMS_IndEMG2_ok);
TMSEMG2.Latencypeak2 = TMS.Latencypeak2(TMS_IndEMG2_ok);
TMSEMG2.Peaktopeakduration = TMS.Peaktopeakduration(TMS_IndEMG2_ok);
TMSEMG2.Stimintensity = TMS.Stimintensity(TMS_IndEMG2_ok);
TMSEMG2.TMSCoil = TMS.TMSCoil(TMS_IndEMG2_ok);
TMSEMG2.Coilposition = TMS.Coilposition(TMS_IndEMG2_ok) ;
TMSEMG2.Coilorientationqxqyqzqw = TMS.Coilorientationqxqyqzqw(TMS_IndEMG2_ok);
TMSEMG2.EMGchannel = TMS.EMGchannel(TMS_IndEMG2_ok);
TMSEMG2.StimulusId = TMS.StimulusId(TMS_IndEMG2_ok);
TMSEMG2.TMSstimulustime = TMS.TMSstimulustime(TMS_IndEMG2_ok);
TMSEMG2.CoilPositionX = TMS.CoilPositionX(TMS_IndEMG2_ok);
TMSEMG2.CoilPositionY = TMS.CoilPositionY(TMS_IndEMG2_ok);
TMSEMG2.CoilPositionZ = TMS.CoilPositionZ(TMS_IndEMG2_ok);
%% Params
TMS_PtPValuesEMG1 = unique(sort(TMS.PeaktopeakV(TMS_IndEMG1_ok)));
TMS_PtPValuesEMG2 = unique(sort(TMS.PeaktopeakV(TMS_IndEMG2_ok)));
TMS_R1 = linspace(0,1,length(TMS_PtPValuesEMG1))';
TMS_G1 = linspace(0,0,length(TMS_PtPValuesEMG1))';
TMS_B1 = linspace(1,0,length(TMS_PtPValuesEMG1))';
% Define Arbitrary Function for Plotting
TMS_HomeColor1 = [TMS_R1 TMS_G1 TMS_B1];
TMS_R2 = linspace(0,1,length(TMS_PtPValuesEMG2))';
TMS_G2 = linspace(0,0,length(TMS_PtPValuesEMG2))';
TMS_B2 = linspace(1,0,length(TMS_PtPValuesEMG2))';
% Define Arbitrary Function for Plotting
TMS_HomeColor2 = [TMS_R2 TMS_G2 TMS_B2];
NumberTrials = 200;
SubjName = 'YB';
SessionNum = 1;
%%
[X_TMSEMG1,Y_TMSEMG1]=meshgrid(linspace(min(TMSEMG1.CoilPositionX),max(TMSEMG1.CoilPositionX),100),linspace(min(TMSEMG1.CoilPositionY),max(TMSEMG1.CoilPositionY),100));%MA: meshgrid 2D
Z_TMSEMG1=griddata(TMSEMG1.CoilPositionX,TMSEMG1.CoilPositionY,TMSEMG1.PeaktopeakV,X_TMSEMG1,Y_TMSEMG1,'v4');%MA: interpolate scattered data
figure;
%surf(X,Y,Z,'EdgeColor','none','LineStyle','none');%MA: 3D
imagesc(-linspace(min(TMSEMG1.CoilPositionX),max(TMSEMG1.CoilPositionX),100),linspace(min(TMSEMG1.CoilPositionY),max(TMSEMG1.CoilPositionY),100),Z_TMSEMG1);%MA: 3D
hold on;
for k = 1:size(TMSEMG1.PeaktopeakV,1)
    % Arbitrary function which relies on the random variable
    % Plot line with color selected by random number
    plot3(-TMSEMG1.CoilPositionX(k),TMSEMG1.CoilPositionY(k),TMSEMG1.PeaktopeakV(k)+10,'o','Color',TMS_HomeColor1(find(TMSEMG1.PeaktopeakV(k)==TMS_PtPValuesEMG1),:),'MarkerFaceColor',TMS_HomeColor1(find(TMSEMG1.PeaktopeakV(k)==TMS_PtPValuesEMG1),:),'MarkerSize',10)
%     plot(TMSS1.CoilPositionX(IndEMG1_ok(k)),TMSS1.CoilPositionY(IndEMG1_ok(k)),'o')
    text(-TMSEMG1.CoilPositionX(k),TMSEMG1.CoilPositionY(k),num2str(k))
end
hold off;
title('Map TMS EMG Channel 1')
  
[X_TMSEMG2,Y_TMSEMG2]=meshgrid(linspace(min(TMSEMG2.CoilPositionX),max(TMSEMG2.CoilPositionX),100),linspace(min(TMSEMG2.CoilPositionY),max(TMSEMG2.CoilPositionY),100));%MA: meshgrid 2D
Z_TMSEMG2=griddata(TMSEMG2.CoilPositionX,TMSEMG2.CoilPositionY,TMSEMG2.PeaktopeakV,X_TMSEMG2,Y_TMSEMG2,'v4');%MA: interpolate scattered data
figure;
%surf(X,Y,Z,'EdgeColor','none','LineStyle','none');%MA: 3D
imagesc(-linspace(min(TMSEMG2.CoilPositionX),max(TMSEMG2.CoilPositionX),100),linspace(min(TMSEMG2.CoilPositionY),max(TMSEMG2.CoilPositionY),100),Z_TMSEMG2);%MA: 3D
hold on;
for l = 1:size(TMSEMG2.PeaktopeakV,1)
    % Arbitrary function which relies on the random variable
    % Plot line with color selected by random number
    plot3(-TMSEMG2.CoilPositionX(l),TMSEMG2.CoilPositionY(l),TMSEMG2.PeaktopeakV(l)+10,'o','Color',TMS_HomeColor1(find(TMSEMG2.PeaktopeakV(l)==TMS_PtPValuesEMG2),:),'MarkerFaceColor',TMS_HomeColor1(find(TMSEMG2.PeaktopeakV(l)==TMS_PtPValuesEMG2),:),'MarkerSize',10)
%     plot(TMSS1.CoilPositionX(IndEMG1_ok(k)),TMSS1.CoilPositionY(IndEMG1_ok(k)),'o')
    text(-TMSEMG2.CoilPositionX(l),TMSEMG2.CoilPositionY(l),num2str(l))
end
hold off;
title('Map TMS EMG Channel 2')

NamefileTMS = ['Results_TMS_Mapping_' SubjName '_Session' num2str(SessionNum)];
save(NamefileTMS)
%%
 
 %%
